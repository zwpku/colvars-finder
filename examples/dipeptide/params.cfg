[System]
sys_name = AlanineDipeptide
# name of PDB file
pdb_filename = ./vacuum.pdb
# temperature of the system, unit: K
sys_temperature = 298 

[Sampling]
# Total simulation steps, i.e. number of states.
n_steps = 100000
pre_steps = 10000
# unit: fs
step_size = 1.0
# unit: ps^{-1}
friction = 1.0
# temperature used in simulation, unit: K
sampling_temperature = 500.0 
sampling_path = ./traj_data/

traj_dcd_filename = traj.dcd
csv_filename = state_data.csv 
energy_col_idx_in_csv = 1
# name of bias file, set it to None if all weights are one (i.e. unbiased)
traj_weight_filename = weights.csv

report_interval_dcd = 100
report_interval_stdout = 1000
report_interval_csv = 100

use_plumed_script = False

[Training]

cutoff_weight_min = 1e-5
cutoff_weight_max = 1e0

use_gpu = True
batch_size = 1000
num_epochs = 30
learning_rate = 0.005
# Adam or SGD
optimizer = Adam  
test_ratio = 0.2
seed = 20
# learn autoencoder or eigenfunction
train_autoencoder = True

load_model_filename = None # checkpoint/AlanineDipeptide-2022-02-18-23:41:05/trained_model.pt 
model_save_dir = checkpoint

save_model_every_step = 10

num_scatter_states = 10

# atoms according to which to align states
align_mda_selector = type C or type O or type N

feature_file = feature.txt

# Neural nets for autoencoder, used when train_autoencoder is True
[AutoEncoder]
encoded_dim = 2
encoder_hidden_layer_dims = 20, 20, 20
decoder_hidden_layer_dims = 20, 20, 20
activation = Tanh

# Neural nets for eigenfunctions, used when train_autoencoder is False
[EigenFunction]
num_eigenfunction = 2
hidden_layer_dims = 20, 20, 20
activation = Tanh
eig_w = 1.0, 0.7
penalty_alpha = 20
diffusion_coeff = 1e-5
sort_eigvals_in_training=True
